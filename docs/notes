shell commands:
    ./convert.py | grep "{v}" | grep -v "\"\"" | wc -l  # how many with derivatives
    ./convert.py | grep "{v} " | grep "\"\""  # check what verbs found no derivatives
    ./convert.py | g "{v}" | wc -l  # how many verbs
    grep -o "{.*}" es-en.dic | sort| uniq  # show tags
    sdiff -s -w 210 dics/wiktionary.tsv dics/wiktionary_2012-08-22.tsv
    cat dumps/enwiktionary-20120821-pages-articles.xml | gawk -v REMOVE_WIKILINKS=y -v REMOVE_CONTEXT=n -v REMOVE_SPACED=y --re-interval -v LANG=Spanish -f trans-FL-en.awk > es-en-2012-09-05.dic


copyrights and attributions:
    https://sites.google.com/site/milesdlh/conjugation

useful resources:
    http://www.tkdocs.com/tutorial/text.html
    http://gskinner.com/RegExr/
    http://www.mobipocket.com/dev/article.asp?basefolder=prcgen&file=indexing.htm
    http://www.klokan.cz/projects/stardict-lingea/
    http://stackoverflow.com/questions/517923/what-is-the-best-way-to-remove-accents-in-a-python-unicode-string
    http://en.wiktionary.org/wiki/User:Matthias_Buchmeier/trans-en-es.awk

sanitization:
    remove " and ;s from es-en.dic, sounds reasonable to go ;=>\n

def grep(string,list):
    expr = re.compile(string)
    for text in list:
        match = expr.search(text)
        if match != None:
            return match.string

def grep2(string,list):
    expr = re.compile(string)
    return [elem for elem in list if expr.match(elem)]

def grep3(string,list):
    expr = re.compile(string)
    return filter(expr.search,list)

regexs:
    [^\t\wáíéóüú ]

some note
    <idx:orth>record
      <idx:infl>
        <idx:iform value="records" />
      </idx:infl>
    </idx:orth>

consider:
    apoyado apoyada

Latin:
    http://www.codeproject.com/Articles/72737/Latin-Textbook-and-Look-up-Table-in-C